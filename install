#!/usr/bin/env bash
set -e

GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
RESET="\033[0m"

run_silent() {
    "$@" >/dev/null
}

DOTFILES_DIR="$HOME/dotfiles"

echo -e "${GREEN}==> Updating system...${RESET}"
sudo pacman -Syu --noconfirm

echo -e "${GREEN}==> Installing base-devel and git...${RESET}"
sudo pacman -S --needed --noconfirm base-devel git

echo -e "${GREEN}==> Installing yay (AUR helper)...${RESET}"
if ! command -v yay >/dev/null 2>&1; then
    git clone https://aur.archlinux.org/yay.git /tmp/yay
    cd /tmp/yay
    makepkg -si --noconfirm
    cd -
fi

####################################################################################
# Install packages
####################################################################################

echo -e "${GREEN}==> Installing Hyprland and core packages...${RESET}"
yay -S --needed --noconfirm \
    pipewire \
    pipewire-audio \
    pipewire-pulse \
    wireplumber \
    steam \
    ani-cli \
    mpv \
    ttf-jetbrains-mono-nerd \
    noto-fonts \
    noto-fonts-emoji \
    noto-fonts-cjk \
    vulkan-radeon \
    lib32-vulkan-radeon \
    wezterm \
    discord \
    helix \
    unzip \
    syncplay \
    pyside6 \
    brave-bin \
    mako \
    waybar \
    fuzzel \
    grim \
    slurp \
    wl-clipboard \
    udiskie \
    blueman \
    network-manager-applet \
    netcoredbg \
    pamixer \
    wlr-randr \
    inotify-tools \
    cliphist \
    hyprland \
    hyprlock \
    hyprshot \
    hyprpaper \
    hyprcursor \
    hyprpolkitagent \
    xdg-desktop-portal-hyprland \
    gnome-keyring \
    qt5-wayland \
    qt6-wayland \
    ly \
    zsh

echo -e "${GREEN}==> Refreshing font cache...${RESET}"
run_silent fc-cache -fv

echo -e "${GREEN}==> Changing shell to zsh...${RESET}"
chsh -s /usr/bin/zsh


####################################################################################
# Dotfiles
####################################################################################

echo -e "${GREEN}==> Setting up dotfiles...${RESET}"
mkdir -p ~/.config

rm -f ~/.wezterm.lua
ln -s "$DOTFILES_DIR/wezterm/wezterm.lua" ~/.wezterm.lua

rm -rf ~/.config/helix
ln -s "$DOTFILES_DIR/helix/" ~/.config/helix

rm -rf ~/.config/waybar
ln -s "$DOTFILES_DIR/waybar/" ~/.config/waybar

rm -rf ~/.config/hypr
ln -s "$DOTFILES_DIR/hypr/" ~/.config/hypr

rm -rf ~/.config/fuzzel
ln -s "$DOTFILES_DIR/fuzzel/" ~/.config/fuzzel

rm -rf ~/.config/mako
ln -s "$DOTFILES_DIR/mako/" ~/.config/mako

echo -e "${GREEN}==> Dotfiles linked successfully!${RESET}"

####################################################################################
# Proton-GE
####################################################################################

while true; do
    echo -e "==> Do you want to install Proton-GE? (y/n) ${RESET}"
    read -r install_proton_ge

    if [[ "$install_proton_ge" == "y" || "$install_proton_ge" == "Y" ]]; then
        echo -e "${GREEN}==> Setting up Proton-GE...${RESET}"

        WORKDIR="/tmp/proton-ge-custom"
        STEAM_COMPAT_DIR="$HOME/.local/share/Steam/compatibilitytools.d"

        # Clean temp working directory
        echo -e "${GREEN}==> Cleaning temporary working directory...${RESET}"
        rm -rf "$WORKDIR"
        mkdir -p "$WORKDIR"

        # Fetch tarball and checksum URLs
        echo -e "${GREEN}==> Fetching Proton-GE release info...${RESET}"
        tarball_url=$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep browser_download_url | cut -d\" -f4 | grep '.tar.gz')
        checksum_url=$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep browser_download_url | cut -d\" -f4 | grep '.sha512sum')

        tarball_name=$(basename "$tarball_url")
        checksum_name=$(basename "$checksum_url")

        # Download tarball and checksum
        echo -e "${GREEN}==> Downloading Proton-GE tarball...${RESET}"
        run_silent curl -L "$tarball_url" -o "$WORKDIR/$tarball_name"

        echo -e "${GREEN}==> Downloading checksum...${RESET}"
        run_silent curl -L "$checksum_url" -o "$WORKDIR/$checksum_name"

        # Verify checksum
        echo -e "${GREEN}==> Verifying Proton-GE tarball integrity...${RESET}"
        cd "$WORKDIR"
        sha512sum -c "$checksum_name"

        # Prepare Steam compatibilitytools.d folder
        echo -e "${GREEN}==> Ensuring Steam compatibility tools directory exists....${RESET}"
        mkdir -p "$STEAM_COMPAT_DIR"

        # Extract Proton-GE
        echo -e "${GREEN}==> Extracting Proton-GE to Steam directory...${RESET}"
        tar -xf "$tarball_name" -C "$STEAM_COMPAT_DIR"

        # Cleanup temp directory
        echo -e "${GREEN}==> Cleaning up temporary files...${RESET}"
        rm -rf "$WORKDIR"

        echo -e "${GREEN}==> Proton-GE installation completed successfully!${RESET}"
        break
    elif [[ "$install_proton_ge" == "n" || "$install_proton_ge" == "N" ]]; then
        echo -e "${YELLOW}==> Skipping Proton-GE installation.${RESET}"
        break
    else
        echo -e "${RED}==> Invalid input. Please enter 'y' or 'n'.${RESET}"
    fi
done

####################################################################################
# Git
####################################################################################

echo -e "==> Please enter your Git username:${RESET}"
read -r user_name

echo -e "==> Please enter your Git email:${RESET}"
read -r user_email

git config --global user.name "$user_name"
git config --global user.email "$user_email"
git config --global gpg.format ssh
git config --global user.signingkey ~/.ssh/github_ed25519.pub
git config --global commit.gpgsign true
git config --global fetch.prune true
git config --global core.longpaths true
git config --global core.ignorecase false
git config --global core.autocrlf false
git config --global core.eol lf

####################################################################################
# Done
####################################################################################

echo -e "${GREEN}==> Installation complete!${RESET}"
echo "You can now log out and start Hyprland from your TTY with: Hyprland"
